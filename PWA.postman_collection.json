{
	"info": {
		"_postman_id": "4b5ca36a-5258-454a-809e-c8d326521217",
		"name": "PWA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20042546"
	},
	"item": [
		{
			"name": "Add user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"userName\", responseData);\r",
							"\r",
							"pm.test(\"Returns user name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Martin\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{host}}/api/user/Martin",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"Martin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Duplicate user test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"User with that name already exists - error message\", function () {\r",
							"    pm.response.to.have.body(\"User with that name already exists.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{host}}/api/user/Martin",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"Martin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add chat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"chatName\", responseData);\r",
							"\r",
							"pm.test(\"Returns chat name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Chat_1\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"users\": [\"{{userName}}\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/chat/Chat_1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"chat",
						"Chat_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add chat Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"chatName\", responseData);\r",
							"\r",
							"pm.test(\"Returns chat name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Chat_1\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"users\": [\"{{userName}}\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/chat/Chat_1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"chat",
						"Chat_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Send message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData = pm.response.json();\r",
							"pm.collectionVariables.set(\"messageId\", responseData.id);\r",
							"\r",
							"\r",
							"pm.test(\"Message sent by\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"user\\\":\\\"Martin\");\r",
							"});\r",
							"pm.test(\"Sent in chat\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"chat\\\":\\\"Chat_1\");\r",
							"});\r",
							"pm.test(\"Message text\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"text\\\":\\\"new message\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"user\": \"{{userName}}\",\r\n    \"chat\": \"{{chatName}}\",\r\n    \"text\": \"new message\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/message",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"message"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Return object with user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Martin\\\"\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/users",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all chats",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Object contains chat\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\\\":\\\"Chat_1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Object contains user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\\\":\\\"Martin\");\r",
							"});\r",
							"\r",
							"pm.test(\"Object contains users object\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"users\\\":[\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{host}}/api/allchats",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"allchats"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all messages for chat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Object contains user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"user\\\":\\\"Martin\");\r",
							"});\r",
							"\r",
							"pm.test(\"Object contains text\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"text\\\":\\\"new message\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/messages/{{chatName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"messages",
						"{{chatName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all chats for user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Object contains chat\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\\\":\\\"Chat_1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Object contains user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\\\":\\\"Martin\");\r",
							"});\r",
							"\r",
							"pm.test(\"Object contains users object\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"users\\\":[\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/chats/{{userName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"chats",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get user info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Object contains name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\\\":\\\"Martin\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/user/{{userName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "User not found test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"User not found - error message\", function () {\r",
							"    pm.response.to.have.body(\"User not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/user/nonexistentuser",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"nonexistentuser"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get chat info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Object contains name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\\\":\\\"Chat_1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Object contains user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\\\":\\\"Martin\");\r",
							"});\r",
							"\r",
							"pm.test(\"Object contains users object\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"users\\\":[\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/chat/{{chatName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"chat",
						"{{chatName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Chat not found test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Chat not found - error message\", function () {\r",
							"    pm.response.to.have.body(\"Chat not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/chat/nonexistentchat",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"chat",
						"nonexistentchat"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get message info",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Object contains chat\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"chat\\\":\\\"Chat_1\");\r",
							"});\r",
							"\r",
							"pm.test(\"Object contains user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"user\\\":\\\"Martin\");\r",
							"});\r",
							"\r",
							"pm.test(\"Object contains text\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"text\\\":\\\"new message\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/message/{{messageId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"message",
						"{{messageId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Mesage not found test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Message not found - error message\", function () {\r",
							"    pm.response.to.have.body(\"Message not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}/api/message/nonexistentmessage",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"message",
						"nonexistentmessage"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response contains Deleted user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Deleted user: Martin\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/user/{{userName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Already deleted test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Not found - error message\", function () {\r",
							"    pm.response.to.have.body(\"User not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/user/{{userName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"{{userName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete chat",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response contains Deleted user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Deleted chat: Chat_1\")\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/chat/{{chatName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"chat",
						"{{chatName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Already deleted test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Not found - error message\", function () {\r",
							"    pm.response.to.have.body(\"Chat not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/chat/{{chatName}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"chat",
						"{{chatName}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete message",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response contains Deleted user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Deleted message: \" + pm.collectionVariables.get(\"messageId\"))\r",
							";\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/message/{{messageId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"message",
						"{{messageId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete message Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Not found - error message\", function () {\r",
							"    pm.response.to.have.body(\"Message not found.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{host}}/api/message/{{messageId}}",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"message",
						"{{messageId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add user 1 after tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{host}}/api/user/Martin",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"Martin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add user 2 after tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{host}}/api/user/Josef",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"Josef"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add user 3 after tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{host}}/api/user/Alois",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"user",
						"Alois"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add chat after tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Chat already exists - error message\", function () {\r",
							"    pm.response.to.have.body(\"Chat already exists.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"users\": [\"Martin\", \"Alois\", \"Josef\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/chat/Chat_1",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"chat",
						"Chat_1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add chat after tests 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Chat already exists - error message\", function () {\r",
							"    pm.response.to.have.body(\"Chat already exists.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"users\": [\"Martin\", \"Alois\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/chat/Chat_Alois_Martin",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"chat",
						"Chat_Alois_Martin"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add chat after tests 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Chat already exists - error message\", function () {\r",
							"    pm.response.to.have.body(\"Chat already exists.\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"users\": [\"Martin\", \"Josef\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}/api/chat/Chat_Martin_Josef",
					"host": [
						"{{host}}"
					],
					"path": [
						"api",
						"chat",
						"Chat_Martin_Josef"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "chatName",
			"value": "",
			"type": "string"
		},
		{
			"key": "messageId",
			"value": "",
			"type": "string"
		},
		{
			"key": "host",
			"value": "http://localhost:3000"
		},
		{
			"key": "userName",
			"value": "",
			"type": "string"
		}
	]
}